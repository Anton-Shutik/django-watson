language: python
python:
  - 2.6
  - 2.7
  - 3.2
  - 3.3
env:
  - DJANGO=django==1.4.10
  - DJANGO=django==1.5.5
  - DJANGO=django==1.6
  - DJANGO=django==1.6 DB_ENGINE="django.db.backends.postgresql_psycopg2" DB_NAME="test_project" DB_USER="postgres"
  - DJANGO=django==1.6 DB_ENGINE="django.db.backends.mysql" DB_NAME="test_project" DB_USER="travis"
matrix:
  exclude:
    - python: 3.2
      env: DJANGO=django==1.4.10
    - python: 3.3
      env: DJANGO=django==1.4.10
    - python: 3.2
      env: DJANGO=django==1.6 DB_ENGINE="django.db.backends.mysql" DB_NAME="test_project" DB_USER="travis"
    - python: 3.3
      env: DJANGO=django==1.6 DB_ENGINE="django.db.backends.mysql" DB_NAME="test_project" DB_USER="travis"
services:
  - postgresql
  - mysql
install:
  - pip install $DJANGO
  - if [[ "$DB_ENGINE" == "django.db.backends.postgresql_psycopg2" ]] ; then pip install psycopg2; fi
  - if [[ "$DB_ENGINE" == "django.db.backends.mysql" ]] ; then pip install MySQL-python; fi
  - python setup.py -q install
before_script:
  - if [[ "$DB_ENGINE" == "django.db.backends.mysql" ]] ; then mysql -e 'create database test_project'; fi
  - if [[ "$DB_ENGINE" == "django.db.backends.postgresql_psycopg2" ]] ; then psql -c 'create database test_project;' -U postgres; fi
script: python src/test_project/manage.py test watson
notifications:
  email: false


